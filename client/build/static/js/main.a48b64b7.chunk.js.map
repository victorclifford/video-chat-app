{"version":3,"sources":["SocketContext.js","components/Vidplayer.jsx","components/Options.jsx","components/Notifications.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","answerCall","peer","Peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","Vidplayer","useContext","myvideo","classes","Grid","container","className","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoplay","Paper","root","display","Container","marginTop","Options","idToCall","setIdToCall","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","Button","color","startIcon","Assignment","fontSize","PhoneDisabled","onClick","Phone","Notifications","style","appBar","borderRadius","alignItems","wrapper","App","AppBar","position","align","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a48b64b7.chunk.js","sourcesContent":["import React, { createContext, useRef, useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst SocketContext = createContext();\nconst socket = io(\"https://viper-vc.herokuapp.com/\");\n\nconst ContextProvider = ({ children }) => {\n  const [stream, setStream] = useState(null);\n  const [me, setMe] = useState(\"\");\n  const [call, setCall] = useState({});\n  let [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on(\"me\", (id) => setMe(id));\n\n    socket.on(\"calluser\", ({ from, name: callerName, signal }) => {\n      setCall({ isReceivedCall: true, from, name: callerName, signal });\n    });\n  }, []);\n  const answerCall = () => {\n    setCallAccepted = true;\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"answercall\", { signal: data, to: call.from });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"calluser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name,\n      });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on(\"callaccepted\", (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n  return (\n    <SocketContext.Provider\n      value={{\n        myVideo,\n        callAccepted,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        answerCall,\n        callUser,\n        leaveCall,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n","import React, { useContext } from \"react\";\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: \"550px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"300px\",\n    },\n  },\n\n  gridContainer: {\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"column\",\n    },\n  },\n\n  paper: {\n    padding: \"10px\",\n    border: \"2px solid black\",\n    margin: \"10px\",\n  },\n}));\n\nconst Vidplayer = () => {\n  const { name, callAccepted, myvideo, userVideo, callEnded, stream, call } =\n    useContext(SocketContext);\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      {/* my video */}\n\n      {stream && (\n        <paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>\n              {name || \"Name\"}\n            </Typography>\n            <video\n              playsInline\n              muted\n              ref={myvideo}\n              autoplay\n              className={classes.video}\n            />\n          </Grid>\n        </paper>\n      )}\n      {/* other user's video */}\n      {callAccepted && !callEnded && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>\n              {call.name || \"Name\"}\n            </Typography>\n            <video\n              playsInline\n              muted\n              ref={userVideo}\n              autoplay\n              className={classes.video}\n            />\n          </Grid>\n        </Paper>\n      )}\n    </Grid>\n  );\n};\n\nexport default Vidplayer;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  Container,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  gridContainer: {\n    width: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"column\",\n    },\n  },\n\n  Container: {\n    width: \"600px\",\n    margin: \"35px 0\",\n    padding: 0,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"80%\",\n    },\n  },\n  margin: {\n    marginTop: 20,\n  },\n  padding: {\n    padding: 20,\n  },\n  paper: {\n    padding: \"10px 20px\",\n    border: \"2px solid black\",\n  },\n}));\n\nconst Options = ({ children }) => {\n  const { me, callAccepted, name, setName, leaveCall, callUser, callEnded } =\n    useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const classes = useStyles();\n\n  return (\n    <Container className=\"classes.container\">\n      <Paper elevation={10} className={classes.paper}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <Grid container className={classes.gridContainer}>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">\n                Account info\n              </Typography>\n              <TextField\n                label=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                fullWidth\n              />\n              <CopyToClipboard text={me} className={classes.margin}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  startIcon={<Assignment fontSize=\"large\" />}\n                >\n                  Copy Your ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            {/* second grid for making call */}\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">\n                Make a Call\n              </Typography>\n              <TextField\n                label=\"ID to Call\"\n                value={idToCall}\n                onChange={(e) => setIdToCall(e.target.value)}\n                fullWidth\n              />\n              {callAccepted && !callEnded ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  startIcon={\n                    <PhoneDisabled\n                      fontSize=\"large\"\n                      fullWidth\n                      onClick={leaveCall}\n                      className={classes.margin}\n                    />\n                  }\n                >\n                  Hang Up\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={\n                    <Phone\n                      fontSize=\"large\"\n                      fullWidth\n                      onClick={() => callUser(idToCall)}\n                      className={classes.margin}\n                    />\n                  }\n                >\n                  Call\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Options;\n","import React, { useContext } from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport { SocketContext } from \"../SocketContext\";\n\nconst Notifications = () => {\n  const { answerCall, callAccepted, call } = useContext(SocketContext);\n\n  return (\n    <>\n      {call && !callAccepted && (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <h1>{call.name} is calling: </h1>\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n            Answer\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport { Typography, AppBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport Vidplayer from \"./components/Vidplayer\";\nimport Options from \"./components/Options\";\nimport Notifications from \"./components/Notifications\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: \"30px 100px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"600px\",\n    border: \"2px solid white\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"90%\",\n    },\n  },\n\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <AppBar position=\"static\" color=\"inherit\" className={classes.appBar}>\n        <Typography variant=\"h2\" align=\"center\">\n          live video chat\n        </Typography>\n      </AppBar>\n      <Vidplayer />\n      <Options>\n        <Notifications />\n      </Options>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { ContextProvider } from \"./SocketContext\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}